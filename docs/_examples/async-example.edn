(require
  '[com.walmartlabs.lacinia.resolve :as resolve]
  '[clojure.core.async :refer [thread]])

(defn ^:private get-user
  [connection user-id]
  ...)

(defn resolve-user
  [context args _]
  (let [{:keys [id]} args
        {:keys [connection]} context
        result (resolve/resolve-promise)]
    (thread
      (try
        (resolve/deliver! result (get-user connection id))
        (catch Throwable t
          (resolve/deliver! result nil
            {:message (str "Exception: " (.getMessage t))}))))

    result))
